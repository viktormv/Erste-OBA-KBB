CREATE OR REPLACE PACKAGE REPGA_DETM_OBA_UGYFEL_PKG IS
	-- %version   0.1   2012.10.25.
	-- %author   Dörnyei László
	-- %usage loading package for detail area
	-- %intab tablelist:
	--                    REPGA_DETM_OBA_SY_C<BR/>
	--                    REPGA_DETM_OBA_QCONTC<BR/>
	--                    REPGA_DETM_OBA_TBASE<BR/>
	--                    REPGA_DETM_OBA_TBASE_RES<BR/>
	-- %outtab tablelist: REPGA_DETM_OBA_UGYFEL

	PROCEDURE MAIN(P_SYM_RUN_DATE DATE DEFAULT EBH_PWM_PUBLIC_P.F_GETSYMRUNDATE);

END;
/
CREATE OR REPLACE PACKAGE BODY REPGA_DETM_OBA_UGYFEL_PKG IS
	-- %version   0.1   2012.10.25.
	-- %author   Dörnyei László
	--
	-- Procedure for calculating and loading data into REPGA_DETM_OBA_UGYFEL table
	-- %param p_sym_run_data: symbols running time <br>
	--              in form of date type
	-- %raises NO
	-- %dynasql NO
	-- %autonom NO
	-- %dbmsout NO
	----------------------------------------------------------------------------------
	-- %version   0.1   DL ERSTEOBA-3 INITIAL

	GC_APPNAME CONSTANT VARCHAR2(30) := 'REPGA_DETM_OBA_UGYFEL_PKG';

	GC_TARGETTABLE CONSTANT VARCHAR2(30) := 'REPGA_DETM_OBA_UGYFEL';

	G_PROCESSED NUMBER := 0;

	G_RUNID NUMBER;

	G_COMMITPOINT NUMBER := 200000;

	G_BATCHSIZE NUMBER := 25000;

	----------------------------------------
	PROCEDURE DELETE_TABLE(P_SYM_RUN_DATE DATE) IS
		C_ACCTION CONSTANT VARCHAR2(6) := 'DELETE';
	BEGIN
		REPGA_BACKOFFICE_PKG.API_ACTION(C_ACCTION);
		REPGA_UTIL_PKG.DELETE_TABLE(GC_TARGETTABLE,
																P_SYM_RUN_DATE);
	END;
	----------------------------------------
	PROCEDURE INSERT_TABLE(P_SYM_RUN_DATE DATE) IS
		C_ACCTION CONSTANT VARCHAR2(6) := 'INSERT';
		L_ROWNUMBER NUMBER := 0;
		L_INDEX     NUMBER := 0;
		L_LAST      NUMBER;

		--TYPE T_SYM_RUN_DATE IS TABLE OF REPGA_DETM_OBA_UGYFEL.SYM_RUN_DATE%TYPE INDEX BY PLS_INTEGER;
		TYPE T_CLIENT_NO IS TABLE OF REPGA_DETM_OBA_UGYFEL.CLIENT_NO%TYPE INDEX BY PLS_INTEGER;
		TYPE T_BAL_HUF IS TABLE OF REPGA_DETM_OBA_UGYFEL.BAL_HUF%TYPE INDEX BY PLS_INTEGER;
		TYPE T_MULTIPLY IS TABLE OF REPGA_DETM_OBA_UGYFEL.MULTIPLY%TYPE INDEX BY PLS_INTEGER;
		--TYPE T_RUN_ID IS TABLE OF REPGA_DETM_OBA_UGYFEL.RUN_ID%TYPE INDEX BY PLS_INTEGER;

		--L_SYM_RUN_DATE  T_SYM_RUN_DATE;
		L_CLIENT_NO T_CLIENT_NO;
		L_BAL_HUF   T_BAL_HUF;
		L_MULTIPLY  T_MULTIPLY;
		--L_RUN_ID  T_RUN_ID;

		CURSOR HC IS(
			SELECT CLIENT_NO,
						 BAL_HUF,
						 1 MULTIPLY
				FROM REPGA_DETM_OBA_SY_C X
			 WHERE SYM_RUN_DATE = P_SYM_RUN_DATE
				 AND DOLG IS NULL
				 AND PDOLG IS NULL
						-- Állami cégek, vezetõ tisztviselõk
				 AND NOT EXISTS (SELECT 1
								FROM REPGA_DETM_OBA_QCONTC
							 WHERE SYM_RUN_DATE = P_SYM_RUN_DATE
								 AND CLIENT_NO = X.CLIENT_NO));
	BEGIN
		REPGA_BACKOFFICE_PKG.API_ACTION(C_ACCTION);
		OPEN HC;
		LOOP
			L_CLIENT_NO.DELETE;

			FETCH HC BULK COLLECT
				INTO
			--L_SYM_RUN_DATE,
			L_CLIENT_NO, L_BAL_HUF, L_MULTIPLY
			--L_RUN_ID,
			LIMIT G_BATCHSIZE;
			L_LAST := L_CLIENT_NO.COUNT;
			EXIT WHEN L_LAST = 0;
			L_ROWNUMBER := L_ROWNUMBER + L_LAST;

			FORALL X IN 1 .. L_LAST
				INSERT INTO REPGA_DETM_OBA_UGYFEL
					(SYM_RUN_DATE,
					 CLIENT_NO,
					 BAL_HUF,
					 MULTIPLY,
					 RUN_ID)
				VALUES
					(P_SYM_RUN_DATE,
					 L_CLIENT_NO(X),
					 L_BAL_HUF(X),
					 L_MULTIPLY(X),
					 G_RUNID);
			IF L_INDEX >= G_COMMITPOINT THEN
				COMMIT;
				L_INDEX := 0;
			ELSE
				L_INDEX := L_INDEX + L_LAST;
			END IF;
		END LOOP;
		COMMIT;
		CLOSE HC;
		G_PROCESSED := G_PROCESSED + L_ROWNUMBER;

		DECLARE
		BEGIN
			FOR REC IN (SELECT AZONOSITO,
												 MULTIPLY
										FROM (SELECT MULTIPLY,
																 (SELECT AZONOSITO
																		FROM REPGA_DETM_OBA_TBASE
																	 WHERE SYM_RUN_DATE = P_SYM_RUN_DATE
																		 AND SRC_SYS = 0 -- Sy
																		 AND NEW_CSOP_ID = R.NEW_CSOP_ID) AZONOSITO
														FROM REPGA_DETM_OBA_TBASE_RES R
													 WHERE SYM_RUN_DATE = P_SYM_RUN_DATE
														 AND MULTIPLY > 1)
									 WHERE AZONOSITO IS NOT NULL)
			LOOP
				--
				UPDATE REPGA_DETM_OBA_UGYFEL
					 SET MULTIPLY = REC.MULTIPLY
				 WHERE SYM_RUN_DATE = P_SYM_RUN_DATE
					 AND CLIENT_NO = REC.AZONOSITO;
				--
			END LOOP;
			COMMIT;
		END;

	END;
	----------------------------------------
	PROCEDURE PREPROCESS(P_SYM_RUN_DATE DATE) IS
		C_ACCTION CONSTANT VARCHAR2(10) := 'PREPROCESS';
	BEGIN
		REPGA_BACKOFFICE_PKG.API_ACTION(C_ACCTION);
		G_BATCHSIZE   := REPGA_UTIL_PKG.GET_BATCHSIZE(GC_TARGETTABLE,
																									G_BATCHSIZE);
		G_COMMITPOINT := REPGA_UTIL_PKG.GET_COMMITPOINT(GC_TARGETTABLE,
																										G_COMMITPOINT);
		REPGA_UTIL_PKG.CLEANUP(P_SYM_RUN_DATE => P_SYM_RUN_DATE,
													 P_APPNAME      => GC_APPNAME,
													 P_TARGETNAME   => GC_TARGETTABLE);
	END;

	----------------------------------------
	PROCEDURE POSTPROCESS(P_SYM_RUN_DATE DATE) IS
		C_ACCTION CONSTANT VARCHAR2(11) := 'POSTPROCESS';
	BEGIN
		REPGA_BACKOFFICE_PKG.API_ACTION(C_ACCTION);
		REPGA_UTIL_PKG.HOUSE_KEEPING(P_SYM_RUN_DATE => P_SYM_RUN_DATE,
																 P_APPNAME      => GC_APPNAME,
																 P_TARGETNAME   => GC_TARGETTABLE);
	END;
	----------------------------------------
	PROCEDURE MAIN(P_SYM_RUN_DATE DATE DEFAULT EBH_PWM_PUBLIC_P.F_GETSYMRUNDATE) IS
	BEGIN
		G_RUNID     := REPGA_BACKOFFICE_PKG.START_API(P_APPNAME      => GC_APPNAME,
																									P_SYM_RUN_DATE => P_SYM_RUN_DATE);
		G_PROCESSED := 0;
		PREPROCESS(P_SYM_RUN_DATE);
		DELETE_TABLE(P_SYM_RUN_DATE);
		INSERT_TABLE(P_SYM_RUN_DATE);
		POSTPROCESS(P_SYM_RUN_DATE);
		REPGA_BACKOFFICE_PKG.END_API(G_PROCESSED);
	EXCEPTION
		WHEN OTHERS THEN
			REPGA_BACKOFFICE_PKG.END_ERROR_API(SQLCODE,
																				 SQLERRM);
	END;

END;
/
