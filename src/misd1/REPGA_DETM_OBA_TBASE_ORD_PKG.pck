CREATE OR REPLACE PACKAGE REPGA_DETM_OBA_TBASE_ORD_PKG IS
	-- %version   0.1   2012.10.25.
	-- %author   Dörnyei László
	-- %usage loading package for detail area
	-- %intab tablelist:  
	--                    REPGA_DETM_OBA_TBASE<BR/>
	--                    REPGA_DETM_OBA_FIDB_R<BR/>
	--                    REPGA_DETM_OBA_TBASE_RES<BR/>
	--                    REPGA_DETM_OBA_BJEGY<BR/>
	--                    REPGA_DETM_OBA_U_BETET<BR/>
	--                    REPGA_DETM_OBA_EJEGY<BR/>

	-- %outtab tablelist: REPGA_DETM_OBA_TBASE_ORD

	PROCEDURE MAIN(P_SYM_RUN_DATE DATE DEFAULT EBH_PWM_PUBLIC_P.F_GETSYMRUNDATE);

END;
/
CREATE OR REPLACE PACKAGE BODY REPGA_DETM_OBA_TBASE_ORD_PKG IS
	-- %version   0.1   2012.10.25.
	-- %author   Dörnyei László
	--
	-- Procedure for calculating and loading data into REPGA_DETM_OBA_TBASE_ORD table
	-- %param p_sym_run_data: symbols running time <br>
	--              in form of date type
	-- %raises NO
	-- %dynasql NO
	-- %autonom NO
	-- %dbmsout NO
	----------------------------------------------------------------------------------
	-- %version   0.1   DL ERSTEOBA-3 INITIAL

	GC_APPNAME CONSTANT VARCHAR2(30) := 'REPGA_DETM_OBA_TBASE_ORD_PKG';

	GC_TARGETTABLE CONSTANT VARCHAR2(30) := 'REPGA_DETM_OBA_TBASE_ORD';

	G_PROCESSED NUMBER := 0;

	G_RUNID NUMBER;

	G_COMMITPOINT NUMBER := 200000;

	G_BATCHSIZE NUMBER := 25000;

	----------------------------------------
	PROCEDURE DELETE_TABLE(P_SYM_RUN_DATE DATE) IS
		C_ACCTION CONSTANT VARCHAR2(6) := 'DELETE';
	BEGIN
		REPGA_BACKOFFICE_PKG.API_ACTION(C_ACCTION);
		REPGA_UTIL_PKG.DELETE_TABLE(GC_TARGETTABLE,
																P_SYM_RUN_DATE);
	END;
	----------------------------------------
	PROCEDURE INSERT_TABLE(P_SYM_RUN_DATE DATE) IS
		C_ACCTION CONSTANT VARCHAR2(6) := 'INSERT';
		L_ROWNUMBER NUMBER := 0;
		L_INDEX     NUMBER := 0;
		L_LAST      NUMBER;
	
		--TYPE T_SYM_RUN_DATE IS TABLE OF REPGA_DETM_OBA_TBASE_ORD.SYM_RUN_DATE%TYPE INDEX BY PLS_INTEGER;
		TYPE T_NEW_CSOP_ID IS TABLE OF REPGA_DETM_OBA_TBASE_ORD.NEW_CSOP_ID%TYPE INDEX BY PLS_INTEGER;
		TYPE T_SRC_SYS IS TABLE OF REPGA_DETM_OBA_TBASE_ORD.SRC_SYS%TYPE INDEX BY PLS_INTEGER;
		TYPE T_AZONOSITO IS TABLE OF REPGA_DETM_OBA_TBASE_ORD.AZONOSITO%TYPE INDEX BY PLS_INTEGER;
		TYPE T_ACCOUNT_NO IS TABLE OF REPGA_DETM_OBA_TBASE_ORD.ACCOUNT_NO%TYPE INDEX BY PLS_INTEGER;
		TYPE T_TIPUS IS TABLE OF REPGA_DETM_OBA_TBASE_ORD.TIPUS%TYPE INDEX BY PLS_INTEGER;
		TYPE T_R_NO IS TABLE OF REPGA_DETM_OBA_TBASE_ORD.R_NO%TYPE INDEX BY PLS_INTEGER;
		--TYPE T_RUN_ID IS TABLE OF REPGA_DETM_OBA_TBASE_ORD.RUN_ID%TYPE INDEX BY PLS_INTEGER;
	
		--L_SYM_RUN_DATE  T_SYM_RUN_DATE;
		L_NEW_CSOP_ID T_NEW_CSOP_ID;
		L_SRC_SYS     T_SRC_SYS;
		L_AZONOSITO   T_AZONOSITO;
		L_ACCOUNT_NO  T_ACCOUNT_NO;
		L_TIPUS       T_TIPUS;
		L_R_NO        T_R_NO;
		--L_RUN_ID  T_RUN_ID;
	
		CURSOR HC IS
			SELECT NEW_CSOP_ID,
						 SRC_SYS,
						 AZONOSITO,
						 ACCOUNT_NO,
						 TIPUS,
						 ROW_NUMBER() OVER(PARTITION BY NEW_CSOP_ID ORDER BY 1) R_NO
				FROM (SELECT NEW_CSOP_ID,
										 SRC_SYS,
										 AZONOSITO,
										 ACCOUNT_NO,
										 S.TIPUS
								FROM REPGA_DETM_OBA_TBASE  B,
										 REPGA_DETM_OBA_FIDB_R S
							 WHERE B.SYM_RUN_DATE = P_SYM_RUN_DATE
								 AND S.SYM_RUN_DATE = P_SYM_RUN_DATE
								 AND SRC_SYS = 0
								 AND CLIENT_NO = AZONOSITO
								 AND NEW_CSOP_ID IN (SELECT NEW_CSOP_ID
																			 FROM REPGA_DETM_OBA_TBASE_RES
																			WHERE EUR_LIMIT = 'Y'
																				AND SYM_RUN_DATE = P_SYM_RUN_DATE)
							UNION ALL
							SELECT NEW_CSOP_ID,
										 SRC_SYS,
										 AZONOSITO,
										 F2,
										 'B' TIPUS
								FROM REPGA_DETM_OBA_TBASE B,
										 REPGA_DETM_OBA_BJEGY S
							 WHERE B.SYM_RUN_DATE = P_SYM_RUN_DATE
								 AND S.SYM_RUN_DATE = P_SYM_RUN_DATE
								 AND SRC_SYS = 1
								 AND F1 = AZONOSITO
								 AND NEW_CSOP_ID IN (SELECT NEW_CSOP_ID
																			 FROM REPGA_DETM_OBA_TBASE_RES
																			WHERE EUR_LIMIT = 'Y'
																				AND SYM_RUN_DATE = P_SYM_RUN_DATE)
							UNION ALL
							SELECT NEW_CSOP_ID,
										 SRC_SYS,
										 AZONOSITO,
										 SZLA,
										 S.TIPUS
								FROM REPGA_DETM_OBA_TBASE   B,
										 REPGA_DETM_OBA_U_BETET S
							 WHERE B.SYM_RUN_DATE = P_SYM_RUN_DATE
								 AND S.SYM_RUN_DATE = P_SYM_RUN_DATE
								 AND SRC_SYS = 2
								 AND CLIENT_NO = AZONOSITO
								 AND NEW_CSOP_ID IN (SELECT NEW_CSOP_ID
																			 FROM REPGA_DETM_OBA_TBASE_RES
																			WHERE EUR_LIMIT = 'Y'
																				AND SYM_RUN_DATE = P_SYM_RUN_DATE)
							UNION ALL
							SELECT NEW_CSOP_ID,
										 SRC_SYS,
										 AZONOSITO,
										 F2,
										 'B' TIPUS
								FROM REPGA_DETM_OBA_TBASE B,
										 REPGA_DETM_OBA_EJEGY S
							 WHERE B.SYM_RUN_DATE = P_SYM_RUN_DATE
								 AND S.SYM_RUN_DATE = P_SYM_RUN_DATE
								 AND SRC_SYS = 3
								 AND F1 = AZONOSITO
								 AND NEW_CSOP_ID IN (SELECT NEW_CSOP_ID
																			 FROM REPGA_DETM_OBA_TBASE_RES
																			WHERE EUR_LIMIT = 'Y'
																				AND SYM_RUN_DATE = P_SYM_RUN_DATE))
			 ORDER BY NEW_CSOP_ID,
								TIPUS DESC,
								SRC_SYS,
								AZONOSITO,
								ACCOUNT_NO;
	BEGIN
		REPGA_BACKOFFICE_PKG.API_ACTION(C_ACCTION);
		OPEN HC;
		LOOP
			L_NEW_CSOP_ID.DELETE;
		
			FETCH HC BULK COLLECT
				INTO L_NEW_CSOP_ID, L_SRC_SYS, L_AZONOSITO, L_ACCOUNT_NO, L_TIPUS, L_R_NO LIMIT G_BATCHSIZE;
			L_LAST := L_NEW_CSOP_ID.COUNT;
			EXIT WHEN L_LAST = 0;
			L_ROWNUMBER := L_ROWNUMBER + L_LAST;
		
			FORALL X IN 1 .. L_LAST
				INSERT INTO REPGA_DETM_OBA_TBASE_ORD
					(SYM_RUN_DATE,
					 NEW_CSOP_ID,
					 SRC_SYS,
					 AZONOSITO,
					 ACCOUNT_NO,
					 TIPUS,
					 R_NO,
					 RUN_ID)
				VALUES
					(P_SYM_RUN_DATE,
					 L_NEW_CSOP_ID(X),
					 L_SRC_SYS(X),
					 L_AZONOSITO(X),
					 L_ACCOUNT_NO(X),
					 L_TIPUS(X),
					 L_R_NO(X),
					 G_RUNID);
			IF L_INDEX >= G_COMMITPOINT THEN
				COMMIT;
				L_INDEX := 0;
			ELSE
				L_INDEX := L_INDEX + L_LAST;
			END IF;
		END LOOP;
		COMMIT;
		CLOSE HC;
		G_PROCESSED := G_PROCESSED + L_ROWNUMBER;
	
	END;
	----------------------------------------
	PROCEDURE PREPROCESS(P_SYM_RUN_DATE DATE) IS
		C_ACCTION CONSTANT VARCHAR2(10) := 'PREPROCESS';
	BEGIN
		REPGA_BACKOFFICE_PKG.API_ACTION(C_ACCTION);
		G_BATCHSIZE   := REPGA_UTIL_PKG.GET_BATCHSIZE(GC_TARGETTABLE,
																									G_BATCHSIZE);
		G_COMMITPOINT := REPGA_UTIL_PKG.GET_COMMITPOINT(GC_TARGETTABLE,
																										G_COMMITPOINT);
		REPGA_UTIL_PKG.CLEANUP(P_SYM_RUN_DATE => P_SYM_RUN_DATE,
													 P_APPNAME      => GC_APPNAME,
													 P_TARGETNAME   => GC_TARGETTABLE);
	END;

	----------------------------------------
	PROCEDURE POSTPROCESS(P_SYM_RUN_DATE DATE) IS
		C_ACCTION CONSTANT VARCHAR2(11) := 'POSTPROCESS';
	BEGIN
		REPGA_BACKOFFICE_PKG.API_ACTION(C_ACCTION);
		REPGA_UTIL_PKG.HOUSE_KEEPING(P_SYM_RUN_DATE => P_SYM_RUN_DATE,
																 P_APPNAME      => GC_APPNAME,
																 P_TARGETNAME   => GC_TARGETTABLE);
	END;
	----------------------------------------
	PROCEDURE MAIN(P_SYM_RUN_DATE DATE DEFAULT EBH_PWM_PUBLIC_P.F_GETSYMRUNDATE) IS
	BEGIN
		G_RUNID     := REPGA_BACKOFFICE_PKG.START_API(P_APPNAME      => GC_APPNAME,
																									P_SYM_RUN_DATE => P_SYM_RUN_DATE);
		G_PROCESSED := 0;
		PREPROCESS(P_SYM_RUN_DATE);
		DELETE_TABLE(P_SYM_RUN_DATE);
		INSERT_TABLE(P_SYM_RUN_DATE);
		POSTPROCESS(P_SYM_RUN_DATE);
		REPGA_BACKOFFICE_PKG.END_API(G_PROCESSED);
	EXCEPTION
		WHEN OTHERS THEN
			REPGA_BACKOFFICE_PKG.END_ERROR_API(SQLCODE,
																				 SQLERRM);
	END;

END;
/
